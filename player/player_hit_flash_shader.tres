[gd_resource type="VisualShader" load_steps=5 format=3 uid="uid://bqctfalafjyp"]

[sub_resource type="VisualShaderNodeColorParameter" id="VisualShaderNodeColorParameter_y04kg"]
parameter_name = "hit_colour"
default_value_enabled = true
default_value = Color(0.808137, 3.27289e-06, 7.70092e-07, 1)

[sub_resource type="VisualShaderNodeBooleanParameter" id="VisualShaderNodeBooleanParameter_q8ine"]
parameter_name = "BooleanParameter"
default_value_enabled = true
default_value = true

[sub_resource type="VisualShaderNodeIf" id="VisualShaderNodeIf_3wlkj"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_1a833"]
input_name = "color"

[resource]
code = "shader_type canvas_item;
render_mode blend_mix;

uniform bool BooleanParameter = true;
uniform vec4 hit_colour : source_color = vec4(0.808137, 0.000003, 0.000001, 1.000000);



void fragment() {
// BooleanParameter:3
	bool n_out3p0 = BooleanParameter;


// ColorParameter:2
	vec4 n_out2p0 = hit_colour;


// Input:5
	vec4 n_out5p0 = COLOR;


	vec3 n_out4p0;
// If:4
	float n_in4p1 = 0.00000;
	float n_in4p2 = 0.00001;
	if(abs((n_out3p0 ? 1.0 : 0.0) - n_in4p1) < n_in4p2)
	{
		n_out4p0 = vec3(n_out2p0.xyz);
	}
	else if((n_out3p0 ? 1.0 : 0.0) < n_in4p1)
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}
	else
	{
		n_out4p0 = vec3(n_out5p0.xyz);
	}


// Output:0
	COLOR.rgb = n_out4p0;


}
"
mode = 1
flags/light_only = false
nodes/fragment/0/position = Vector2(1360, 380)
nodes/fragment/2/node = SubResource("VisualShaderNodeColorParameter_y04kg")
nodes/fragment/2/position = Vector2(820, 500)
nodes/fragment/3/node = SubResource("VisualShaderNodeBooleanParameter_q8ine")
nodes/fragment/3/position = Vector2(820, 320)
nodes/fragment/4/node = SubResource("VisualShaderNodeIf_3wlkj")
nodes/fragment/4/position = Vector2(1160, 380)
nodes/fragment/5/node = SubResource("VisualShaderNodeInput_1a833")
nodes/fragment/5/position = Vector2(820, 700)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 0, 2, 0, 4, 3, 4, 0, 0, 0, 5, 0, 4, 4, 5, 0, 4, 5)
